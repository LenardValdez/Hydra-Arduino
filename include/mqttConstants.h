#ifndef __MQTTCONSTANTS_H__
#define __MQTTCONSTANTS_H__

#include "header.h"
//this is autogenerated by SSClient python script
// #include "certificates.h"

//Ethernet Variable for connecting
byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };
IPAddress ip(192, 168, 1, 118);
IPAddress myDns(192, 168, 1, 4);
IPAddress gateway(192, 168, 1, 1);
IPAddress subnet(255, 255, 255, 0);

// MQTT broker host/IP and topic subscription
const char* server = "192.168.1.4";
// const char* server = "mqtts.hydr-a.local";
const char* topic_sensor_data = "hyd-1/sensor_data/";
const char* topic_probe_data = "hyd-1/probe_data/";
const char* command_new_crop = "hyd-1/commands/new_crop/";
const char* change_value_ph = "hyd-1/commands/change_value/ph_reading/";
const char* change_value_ec = "hyd-1/commands/change_value/ec_reading/";
const char* change_value_air_hum = "hyd-1/commands/change_value/air_humidity/";
const char* change_value_air_temp = "hyd-1/commands/change_value/air_temperature/";
const char* harvest_command = "hyd-1/commands/harvest/";
const char* connection = "hyd-1/connection/";
const char* manual_prime = "hyd-1/commands/manual_prime/";

//system self note
const char* pumps_primed = "hyd-1/self/pumps_primed/";
const char* EC_PH_time = "hyd-1/self/first_run/";

//Last will and testament of disconnected Pod
const char* LWAT = "disconnected";

//SSL section
// constant client and server/broker cert
// const char my_cert[] = "generate your cert using openssl";

// const char my_key[] = "generate your rsa mey using openssl";

// SSLClientParameters mTLS = SSLClientParameters::fromPEM(my_cert, sizeof my_cert, my_key, sizeof my_key);

// Ethernet and MQTT related objects
EthernetClient ethClient;
// SSLClient ethClientSSL(ethClient, TAs, (size_t)TAs_NUM, A5);
PubSubClient mqttClient(server, 1883, ethClient);
#endif // __MQTTCONSTANTS_H__
